openapi: "3.1.0"
info:
  title: "OTA_Server API"
  description: "OTA_Server API"
  version: "1.0.0"
servers:
- url: "https://OTA_Server"
paths:
  /rest/v0.0.1/devices:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Device"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Device"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Device"
  /rest/v0.0.1/devices/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Device"
  /rest/v0.0.1/firmwareReleases:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FirmwareRelease"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirmwareReleaseInput"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FirmwareRelease"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirmwareReleaseInput"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FirmwareRelease"
  /rest/v0.0.1/firmwareReleases/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FirmwareRelease"
  /rest/v0.0.1/firmwareReleases/{id}/binary:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK <br> A file response"
          content:
            application/*:
              schema:
                type: "object"
                format: "binary"
    post:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /rest/v0.0.1/releaseTrains:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ReleaseTrain"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReleaseTrainInput"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReleaseTrain"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReleaseTrainInput"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReleaseTrain"
  /rest/v0.0.1/releaseTrains/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReleaseTrain"
  /rest/v0.0.1/users:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/User"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /rest/v0.0.1/users/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    AccessToken:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        tokenString:
          type: "string"
        info:
          type: "string"
      required:
        - "tokenString"
    Device:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        accessToken:
          $ref: "#/components/schemas/AccessToken"
        info:
          type: "string"
      required:
        - "accessToken"
    Unit:
      type: "object"
      properties: { }
    FirmwareRelease:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        version:
          type: "string"
        buildHash:
          type: "string"
        pipeLineId:
          type: "string"
        commitHash:
          type: "string"
        info:
          type: "string"
      required:
        - "version"
        - "buildHash"
        - "pipeLineId"
        - "commitHash"
    ReleaseTrainInput:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        info:
          type: "string"
    FirmwareReleaseInput:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        version:
          type: "string"
        buildHash:
          type: "string"
        pipeLineId:
          type: "string"
        commitHash:
          type: "string"
        info:
          type: "string"
        releaseTrain:
          $ref: "#/components/schemas/ReleaseTrainInput"
      required:
        - "version"
        - "buildHash"
        - "pipeLineId"
        - "commitHash"
        - "releaseTrain"
    ReleaseTrain:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        firmwareReleases:
          type: "array"
          items:
            $ref: "#/components/schemas/FirmwareRelease"
        info:
          type: "string"
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        accessToken:
          $ref: "#/components/schemas/AccessToken"
        info:
          type: "string"
      required:
        - "accessToken"